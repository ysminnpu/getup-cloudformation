{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Ambiente Dev",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Chave SSH publica para admin",
      "Default" : "getup",
      "Type" : "String"
    },
    "Environment" : {
      "Description" : "Environment",
      "Default" : "",
      "Type" : "String"
    },
    
    "PuppetHostname": {
      "Description" : "PuppetMaster hostname",
      "Default" : "puppetmaster.ops.getupcloud.com",
      "Type": "String"
    },

    "VpcId" : {
      "Type" : "String",
      "Default" : "vpc-8c4b07e5",
      "Description" : "Id do VPC"
    },
    "PublicNetId" : {
      "Type" : "String",
      "AllowedValues" : [ "1","2","3"],
      "ConstraintDescription" : "must be values between 1 and 3",
      "Description" : "Indice da rede [ 1-3 ]"
    },
    "AmiId" : {
      "Type" : "String",
      "Default" : "ami-505dc160",
      "Description" : "AMI utilizado para a instancia"
    },
    
"InstanceType" : {
      "Description" : "Tamanho da instancia",
      "Type" : "String",
      "Default" : "c1.medium",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SecurityGroupId": {
      "Type" : "String",
      "Default" : "sg-354ca25a",
      "Description" : "SecurityGroup"
    }

  },
  "Mappings" : {
    "NetworksMap" : {
      "public" :  { "1" : "subnet-974b07fe", "2" : "subnet-60440809", "3" : "subnet-6544080c" }
    }
  },
  "Resources": {

    "CFNInitUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Policies": [{
          "PolicyName": "AccessForCFNInit",
          "PolicyDocument" : {
            "Statement": [{
              "Effect"   : "Allow",
              "Action"   : "cloudformation:DescribeStackResource",
              "Resource" : "*"
            }]
          }
        }]
      }
    },
    
    "CFNKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref": "CFNInitUser" }
      }
    },

    "OpsDNSRecord": {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : "ops.getupcloud.com.",
        "Comment" : "A record created by cloudformation",
        "Name" : { "Fn::Join" : [ "", [{"Ref" : "AWS::StackName"}, ".ops.getupcloud.com"]]},
        "Type" : "A",
        "TTL" : "300",
        "ResourceRecords" : [ { 
          "Ref" : "IPAddress"
        } ]
      } 
    },
   "IPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "Instance" }
      }
    },
    
   "Instance": {  
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "puppet"     : [],
                "ruby-devel" : [],
                "gcc"        : [],
                "make"       : [],
                "rubygems"   : []
              },
              "rubygems" : {
                "json"       : []
              }
            },
            "files" : {
              "/etc/puppet/puppet.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "[main]\n",
                  "   logdir=/var/log/puppet\n",
                  "   rundir=/var/run/puppet\n",
                  "   ssldir=$vardir/ssl\n",
                  "   pluginsync=true\n",
                  "[agent]\n",
                  "   runinterval=21600\n",
                  "   classfile=$vardir/classes.txt\n",
                  "   localconfig=$vardir/localconfig\n",
                  "   server=",{ "Ref" : "PuppetHostname" },"\n",
                  "   environment=",{ "Ref" : "Environment" },"\n"
                ]] },
                "mode" : "000644",
                "owner" : "root",
                "group" : "root"
              },
              "/usr/lib/ruby/site_ruby/1.8/facter/ec2.rb" : {
              "source" : "https://s3-us-west-2.amazonaws.com/ec2facter/ec2.rb",
              "mode" : "000644",
              "owner" : "root",
              "group" : "root"
              }
            },
            "services" : {
              "sysvinit" : {  
                "puppet" : {
                  "enabled" : "true",
                  "ensureRunning" : "true"                
                }
              }
            }
          }
        },
        "Puppet" : {
          "roles"    :  "devenv",
          "hostname" : [ { "Ref" : "AWS::StackName"}]
        }
      },
      "Properties": {
        "ImageId" : { "Ref" : "AmiId" },
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroupId" }],
        "SubnetId" : { "Fn::FindInMap" : [ "NetworksMap", "public", { "Ref" : "PublicNetId" } ] },
        "KeyName" : { "Ref" : "KeyName" },
        "InstanceType": { "Ref": "InstanceType" },
        "Tags": [ { "Key" : "Name", "Value": { "Ref": "AWS::StackName" } } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",
          "if [ -d /var/tmp/aws-mon ]; then rm -Rf /var/tmp/aws-mon; fi\n",
          "/bin/hostname ", { "Ref" : "AWS::StackName" }, "\n",

          "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
          "    -s ", { "Ref" : "AWS::StackName" }, " -r Instance ",
          "    --access-key ", { "Ref" : "CFNKeys" },
          "    --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n",
          "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "ApplicationWaitHandle" }, "'\n"
        ]]}}
      }
    },
    
    "ApplicationWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "ApplicationWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn"  : "Instance",
      "Properties" : {
        "Handle"   : { "Ref" : "ApplicationWaitHandle" },
        "Timeout"  : "1200"
      }
    }
  },

  "Outputs" : {
    "InstanceId" : {
      "Value" : { "Ref" : "Instance" },
      "Description" : "Instance Id of newly created instance"
    },

    "OPSDNS" : {
      "Value" : {"Ref" : "OpsDNSRecord" },
      "Description" : "Instance internal dns name"
    },

    "SecurityGroupId" : {
      "Value" : { "Ref" : "SecurityGroupId" },
      "Description" : "Security Group of instance"
    }
  }

}
